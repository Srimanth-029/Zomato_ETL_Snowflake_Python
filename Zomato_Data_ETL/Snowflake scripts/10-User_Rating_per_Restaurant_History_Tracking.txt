CREATE OR REPLACE TABLE USER_RATING_HISTORY(
    Rating_History_Id INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    Restaurant_ID INT ,
    AGGREGATE_RATING FLOAT,
    RATING_TEXT VARCHAR(255),
    VOTES INT,
    IS_ACTIVE BOOLEAN,
    START_DATE DATETIME,
    END_DATE DATETIME,
    CREATED_BY VARCHAR(50),
    CREATED_DATE DATETIME
); ---------JUST TO CAPTURE THE UPDATED OLD RECORD's VALUES OF RATINGS FROM THE USER_RATING TABLE 

DESC TABLE USER_RATING_HISTORY;
SELECT * FROM ZOMATO_ETL.DBO.REST_RATINGS_CAPTURE WHERE RESTAURANT_ID = 652;

SELECT * FROM USER_RATING WHERE RESTAURANT_ID = 166043712;

SELECT * FROM ZOMATO_ETL.DBO.Rest_Ratings_Capture WHERE RESTAURANT_ID = 652;
UPDATE ZOMATO_ETL.DBO.USER_RATING SET AGGREGATE_RATING = 8,RATING_TEXT = 'Ok',votes = 1000000 where RESTAURANT_ID = 652;
UPDATE ZOMATO_ETL.DBO.USER_RATING SET AGGREGATE_RATING = 5.5, VOTES = 126000,MODIFIED_DATE = CURRENT_TIMESTAMP() WHERE RESTAURANT_ID = 652;
UPDATE ZOMATO_ETL.DBO.USER_RATING SET AGGREGATE_RATING = 9.0, VOTES = 100000,MODIFIED_DATE = CURRENT_TIMESTAMP() WHERE RESTAURANT_ID = 652;
UPDATE ZOMATO_ETL.DBO.USER_RATING SET AGGREGATE_RATING = 2.4, VOTES = 1000,MODIFIED_DATE = CURRENT_TIMESTAMP() WHERE RESTAURANT_ID = 306934;
----VIEW CREATION
CREATE OR REPLACE VIEW Rating_History AS(
    WITH CTE AS(
        SELECT  RESTAURANT_ID,
        AGGREGATE_RATING,
        RATING_TEXT,
        VOTES,
        FALSE AS IS_ACTIVE,
        CASE WHEN MODIFIED_DATE IS NULL THEN CREATED_DATE ELSE MODIFIED_DATE END START_DATE,
        LAG(MODIFIED_DATE,1,NULL) OVER (PARTITION BY RESTAURANT_ID ORDER BY METADATA$ACTION DESC,MODIFIED_DATE DESC) END_DATE,
        METADATA$ACTION, 
        METADATA$ISUPDATE
        FROM ZOMATO_ETL.DBO.REST_RATINGS_CAPTURE
         --AND RW_NM = 1
        )
    SELECT C.RESTAURANT_ID,
        C.AGGREGATE_RATING,
        C.RATING_TEXT,
        C.VOTES,
        C.START_DATE,
        C.END_DATE,
        C.IS_ACTIVE
        FROM CTE C 
        WHERE
        C.METADATA$ACTION = 'DELETE'
);       

select * from RATING_HISTORY;

CREATE OR REPLACE TASK Rating_Data_Track  warehouse = 'COMPUTE_WH' SCHEDULE = '1 MINUTE'
AS
    INSERT INTO USER_RATING_HISTORY(RESTAURANT_ID,AGGREGATE_RATING,RATING_TEXT,VOTES,IS_ACTIVE,START_DATE,END_DATE,CREATED_BY,CREATED_DATE)
    select RESTAURANT_ID,AGGREGATE_RATING,RATING_TEXT,VOTES,IS_ACTIVE,START_DATE,END_DATE,CURRENT_USER(),CURRENT_TIMESTAMP() 
    from RATING_HISTORY RH;

SELECT * FROM USER_RATING_HISTORY;

select TIMESTAMPDIFF(SECONDS,CURRENT_TIMESTAMP(),NEXT_SCHEDULED_TIME) Next_Run_Sec,* from table(information_schema.task_history()) where state = 'Scheduled';

show tasks;
alter task Rating_Data_Track SUSPEND;
